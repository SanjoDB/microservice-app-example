trigger:
  branches:
    include:
      - feature/*
      - main
  paths:
    include:
      - users-api/**

pool:
  vmImage: ubuntu-latest

variables:
  service_dir: 'users-api'
  artifact_name: 'users-api-0.0.1-SNAPSHOT.jar'
  artifact_path: 'users-api/target/users-api-0.0.1-SNAPSHOT.jar'
  vm_ip: '172.172.172.182'
  remote_dir: '~/microservice-app-example/users-api'

stages:
- stage: BuildAndDeploy
  jobs:

  - job: BuildUsersApi
    displayName: 'Build de Users API'
    steps:
      - checkout: self

      - task: JavaToolInstaller@0
        inputs:
          versionSpec: '8'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'
        displayName: 'Asegurar JDK 8'

      - script: |
          cd $(service_dir)
          chmod +x mvnw
          export JWT_SECRET=PRFT
          export SERVER_PORT=8083
          ./mvnw clean install -DskipTests
        displayName: 'Construir con Maven'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.SourcesDirectory)/users-api/target'
          artifact: 'users-jar'
          publishLocation: 'pipeline'
        displayName: 'Publicar JAR como artefacto'

  - job: Deploy
    displayName: 'Deploy en VM de Desarrollo'
    dependsOn: BuildUsersApi
    steps:
      - download: current
        artifact: users-jar

      - task: CopyFilesOverSSH@0
        inputs:
          sshEndpoint: VM-DEV-CONNECTION
          sourceFolder: $(Pipeline.Workspace)/users-jar
          contents: $(artifact_name)
          targetFolder: $(remote_dir)/target
        displayName: 'Copiar JAR a la VM'

      - task: SSH@0
        inputs:
          sshEndpoint: VM-DEV-CONNECTION
          runOptions: inline
          inline: |
            echo "⚙️ Desplegando users-api en la VM"
            cd $(remote_dir)
            pm2 delete users-api || echo "No existía"
            JWT_SECRET=PRFT SERVER_PORT=8083 pm2 start "java -jar target/$(artifact_name)" --name users-api
        displayName: 'Ejecutar en la VM'
