trigger: none

pr:
  branches:
    include:
      - main
      - staging
      - prod
  paths:
    include:
      - '**/*'

variables:
  repo_dir: 'microservice-app-example'
  branch_name: $(System.PullRequest.SourceBranch)
  staging_vm_connection: 'VM-STAGING-CONNECTION'
  prod_vm_connection: 'VM-PROD-CONNECTION'

stages:
- stage: DeployFromPR
  displayName: "Desplegar al entorno desde PR"
  jobs:
    - job: DeployToStagingOrProd
      displayName: "Actualizar código y compilar dentro de la VM"
      steps:
        - task: SSH@0
          displayName: "Actualizar repo y compilar en la VM"
          inputs:
            sshEndpoint: $[eq(variables['Build.SourceBranchName'], 'staging') ? 'VM-STAGING-CONNECTION' : 'VM-PROD-CONNECTION']
            runOptions: inline
            inline: |
              echo "Entrando a la carpeta del repo"
              cd ~/${repo_dir}

              echo "Haciendo pull de la rama $branch_name"
              git fetch origin
              git checkout $branch_name
              git pull origin $branch_name

              echo "Compilando microservicios"
              cd auth-api
              go build -o auth-api .
              pm2 restart auth-api || pm2 start ./auth-api --name auth-api
              cd ..

              cd users-api
              chmod +x mvnw
              ./mvnw clean install -DskipTests
              pm2 restart users-api || pm2 start "java -jar target/users-api-0.0.1-SNAPSHOT.jar" --name users-api
              cd ..

              cd todos-api
              npm install
              pm2 restart todos-api || pm2 start "npm start" --name todos-api
              cd ..

              cd frontend
              npm install
              npm run build
              pm2 restart frontend || pm2 start "npm start" --name frontend
              cd ..

              echo "Despliegue y compilación finalizados"
