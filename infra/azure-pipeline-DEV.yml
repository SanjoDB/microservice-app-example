trigger:
  branches:
    include:
      - infra/dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  environment: dev
  tf_version: '1.5.5'
  ansible_path: '/home/azureuser/microservice-app-example/ansible'
  inventory_path: '$(Build.SourcesDirectory)/ansible/inventory/hosts.ini'

steps:
  - task: TerraformInstaller@0
    inputs:
      terraformVersion: '$(tf_version)'
    displayName: 'Instalar Terraform'

  - script: terraform --version
    displayName: 'Verificar versiÃ³n de Terraform'

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'Kevin'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        cd infra
        terraform init
        terraform apply -auto-approve

        # Capturar los outputs de Terraform
        publicIpAddress=$(terraform output -raw vm_public_ip)
        adminPassword=$(terraform output -raw admin_password)

        # Crear el archivo de inventario para Ansible
        inventoryContent="[azure_vm]\n$publicIpAddress ansible_user=azureuser ansible_ssh_pass=$adminPassword"
        echo -e "$inventoryContent" > $(inventory_path)

    displayName: 'Desplegar infraestructura DEV con Terraform y generar inventario Ansible'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/ansible'
      TargetFolder: '/home/azureuser/microservice-app-example/ansible'
    displayName: 'Copiar archivos de Ansible a la VM'

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'Kevin'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        wsl bash -c "cd $(ansible_path) && \
            export ANSIBLE_ROLES_PATH=./roles && \
            export ANSIBLE_HOST_KEY_CHECKING=False && \
            ansible-playbook -i $(inventory_path) playbooks/playbook.yml"
    displayName: 'Ejecutar Ansible playbook para instalar Docker'
